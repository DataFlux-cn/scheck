// Code generated by MockGen. DO NOT EDIT.
// Source: dockerimpl.go

// Package impl is a generated GoMock package.
package impl

import (
	context "context"
	reflect "reflect"

	types "github.com/docker/docker/api/types"
	gomock "github.com/golang/mock/gomock"
)

// MockcliMock is a mock of cliMock interface.
type MockcliMock struct {
	ctrl     *gomock.Controller
	recorder *MockcliMockMockRecorder
}

// MockcliMockMockRecorder is the mock recorder for MockcliMock.
type MockcliMockMockRecorder struct {
	mock *MockcliMock
}

// NewMockcliMock creates a new mock instance.
func NewMockcliMock(ctrl *gomock.Controller) *MockcliMock {
	mock := &MockcliMock{ctrl: ctrl}
	mock.recorder = &MockcliMockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockcliMock) EXPECT() *MockcliMockMockRecorder {
	return m.recorder
}

// ContainerList mocks base method.
func (m *MockcliMock) ContainerList(ctx context.Context, opt types.ContainerListOptions) ([]types.Container, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ContainerList", ctx, opt)
	ret0, _ := ret[0].([]types.Container)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ContainerList indicates an expected call of ContainerList.
func (mr *MockcliMockMockRecorder) ContainerList(ctx, opt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ContainerList", reflect.TypeOf((*MockcliMock)(nil).ContainerList), ctx, opt)
}

// ImageList mocks base method.
func (m *MockcliMock) ImageList(ctx context.Context, opt types.ImageListOptions) ([]types.ImageSummary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImageList", ctx, opt)
	ret0, _ := ret[0].([]types.ImageSummary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ImageList indicates an expected call of ImageList.
func (mr *MockcliMockMockRecorder) ImageList(ctx, opt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImageList", reflect.TypeOf((*MockcliMock)(nil).ImageList), ctx, opt)
}
