# Scheck install script for Windows
# Tue Aug 10 22:47:16 PDT 2021
# Author: tanb

# See https://stackoverflow.com/a/4647985/342348
function Write-COutput($ForegroundColor) {
    # save the current color
    $fc = $host.UI.RawUI.ForegroundColor

    # set the new color
    $host.UI.RawUI.ForegroundColor = $ForegroundColor

    # output
    if ($args) {
        Write-Output $args
    }
    else {
        $input | Write-Output
    }

    # restore the original color
    $host.UI.RawUI.ForegroundColor = $fc
}

##########################
# Detect variables
##########################

$installer_base_url = "https://{{INSTALLER_BASE_URL}}"

$x = [Environment]::GetEnvironmentVariable("SC_INSTALLER_BASE_URL")
if ($x -ne $null) {
	$installer_base_url = $x
	Write-COutput green ("* set base URL to $installer_base_url")
}

$x = [Environment]::GetEnvironmentVariable("SC_UPGRADE")
if ($x -ne $null) {
	$upgrade = $x
	Write-COutput green ("* set upgrade" )
}

##########################
# Detect arch 32 or 64
##########################
$arch = "amd64"
if ([Environment]::Is64BitProcess -ne [Environment]::Is64BitOperatingSystem) {
	$arch="i386"
}

$installer_url = "$installer_base_url/installer-windows-$arch.exe"
$installer=".sc-installer.exe"

##########################
# try install...
##########################
Write-COutput green "* Downloading ..."

if (Test-Path $installer) {
	Remove-Item $installer
}

Import-Module bitstransfer
$dl_installer_action = "start-bitstransfer -source $installer_url -destination $installer"
if ($proxy -ne $null) {
	$dl_installer_action = "start-bitstransfer -ProxyUsage Override -ProxyList $proxy -source $installer_url -destination $installer"
}

Invoke-Expression $dl_installer_action

if ($upgrade -ne $null) { # upgrade
	$action = "$installer -upgrade"
} else { # install new Scheck
	$action = "$installer "
	if ($install_only -ne $null) {
		$action = -join($action, " ", "--install-only")
	}
}

Write-COutput green "action: $action"
Invoke-Expression $action

# remove installer
Remove-Item -Force -ErrorAction SilentlyContinue $installer
Remove-Item -Force -ErrorAction SilentlyContinue .\install.ps1

# clean envs
$optional_envs="SC_UPGRADE","SC_INSTALL_ONLY"
foreach ($env in $optional_envs) {
	Remove-Item -ErrorAction SilentlyContinue Env:$env
}
